#VlnPlot(object = txn_re_w19, features.plot = c(genelist), cols.use = clustercolors, x.lab.rot = T, size.x.use = 0, point.size.use = 2, return.plotlist = TRUE, same.y.lims = T)
}
makegraphs(c("POU5F1", "DDX4", "MAEL", "HSP90AA1", "PIWIL2", "PIWIL4")) #germcellgenes
par(mfrow = c(3, 2))
makegraphs(c("POU5F1", "DDX4", "MAEL", "HSP90AA1", "PIWIL2", "PIWIL4")) #germcellgenes
par(mfrow = c(2, 3))
makegraphs(c("POU5F1", "DDX4", "MAEL", "HSP90AA1", "PIWIL2", "PIWIL4")) #germcellgenes
############################################################################
#most recent iteration for generating figures, contains both re and txn data
############################################################################
load(file = "/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/20180420-seuratw19_txn_re_figs.Robj")
#gene expression data
scattercolors = c("cyan", "navy")
clustercolors = c("blue","forestgreen","gray45")
TSNEPlot(object = txn_re_w19, colors.use = clustercolors, pt.size = 2, pt.shape )
makegraphs = function(genelist){
#FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "pca", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
par(mfrow = c(2, 3))
FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "tsne", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
#VlnPlot(object = txn_re_w19, features.plot = c(genelist), cols.use = clustercolors, x.lab.rot = T, size.x.use = 0, point.size.use = 2, return.plotlist = TRUE, same.y.lims = T)
}
gcgeneplot("HSP90AA1","PIWIL4")
advgc_ids_re = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Adv. GC'))])
earlygc_ids_re = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Early GC'))])
allgc_ids_re = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Early GC','Adv. GC'))])
advgc_so = SubsetData(txn_re_w19, cells.use = advgc_ids_re)
earlygc_so = SubsetData(txn_re_w19, cells.use = earlygc_ids_re)
allgc_so = SubsetData(txn_re_w19, cells.use = allgc_ids_re)
gcgeneplot = function(gene1, gene2){
par(mfrow = c(2, 2))
GenePlot(advgc_so, gene1, gene2, col.use = c('blue'), cex.use = 1.5)
GenePlot(earlygc_so, gene1, gene2, col.use = c('forestgreen'),cex.use = 1.5)
GenePlot(allgc_so, gene1, gene2, col.use = clustercolors, cex.use = 1.5)
GenePlot(txn_re_w19, gene1, gene2, col.use = clustercolors, cex.use = 1.5)
}
gcgeneplot("L1PA2","PIWIL2")
gcgeneplot("L1PA2","PIWIL4")
gcgeneplot("L1PA3","PIWIL2")
gcgeneplot("L1PA3","PIWIL4")
?FindMarkers
############################################################################
#most recent iteration for generating figures, contains both re and txn data
############################################################################
load(file = "/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/20180420-seuratw19_txn_re_figs.Robj")
scattercolors = c("cyan", "navy")
clustercolors = c("blue","forestgreen","gray45")
TSNEPlot(object = txn_re_w19, colors.use = clustercolors, pt.size = 2, pt.shape )
makegraphs = function(genelist){
FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "pca", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
par(mfrow = c(2, 3))
FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "tsne", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
VlnPlot(object = txn_re_w19, features.plot = c(genelist), cols.use = clustercolors, x.lab.rot = T, size.x.use = 0, point.size.use = 2, return.plotlist = TRUE, same.y.lims = T)
}
makegraphs(c("NR3C1")) #glucocorticoid receptor steven
############################################################################
#most recent iteration for generating figures, contains both re and txn data
############################################################################
load(file = "/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/20180420-seuratw19_txn_re_figs.Robj")
#gene expression data
scattercolors = c("cyan", "navy")
clustercolors = c("blue","forestgreen","gray45")
TSNEPlot(object = txn_re_w19, colors.use = clustercolors, pt.size = 2, pt.shape )
#must initialize first 7 lines in "PIWIL4 and L1HS colocalization with other transposons" section
gcgeneplot = function(gene1, gene2){
par(mfrow = c(2, 2))
GenePlot(advgc_so, gene1, gene2, col.use = c('blue'), cex.use = 1.5)
GenePlot(earlygc_so, gene1, gene2, col.use = c('forestgreen'),cex.use = 1.5)
GenePlot(allgc_so, gene1, gene2, col.use = clustercolors, cex.use = 1.5)
GenePlot(txn_re_w19, gene1, gene2, col.use = clustercolors, cex.use = 1.5)
}
gcgeneplot("L1HS","HSP90AA1")
#PIWIL4 and L1HS colocalization with other transposons ####
advgc_ids_re = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Adv. GC'))])
earlygc_ids_re = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Early GC'))])
allgc_ids_re = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Early GC','Adv. GC'))])
advgc_so = SubsetData(txn_re_w19, cells.use = advgc_ids_re)
earlygc_so = SubsetData(txn_re_w19, cells.use = earlygc_ids_re)
allgc_so = SubsetData(txn_re_w19, cells.use = allgc_ids_re)
gcgeneplot("L1HS","HSP90AA1")
############################################################################
#most recent iteration for generating figures, contains both re and txn data
############################################################################
load(file = "/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/20180420-seuratw19_txn_re_figs.Robj")
#gene expression data
scattercolors = c("cyan", "navy")
clustercolors = c("blue","forestgreen","gray45")
TSNEPlot(object = txn_re_w19, colors.use = clustercolors, pt.size = 2, pt.shape )
TSNEPlot(object = txn_re_w19, colors.use = clustercolors, pt.size = 2)
makegraphs = function(genelist){
#FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "pca", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
par(mfrow = c(2, 3))
FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "tsne", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
#VlnPlot(object = txn_re_w19, features.plot = c(genelist), cols.use = clustercolors, x.lab.rot = T, size.x.use = 0, point.size.use = 2, return.plotlist = TRUE, same.y.lims = T)
}
#PIWIL4 and L1HS colocalization with other transposons ####
advgc_ids_re = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Adv. GC'))])
earlygc_ids_re = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Early GC'))])
allgc_ids_re = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Early GC','Adv. GC'))])
advgc_so = SubsetData(txn_re_w19, cells.use = advgc_ids_re)
earlygc_so = SubsetData(txn_re_w19, cells.use = earlygc_ids_re)
allgc_so = SubsetData(txn_re_w19, cells.use = allgc_ids_re)
rm(advgc_ids_re)
rm(advgc_so)
advgc_so = SubsetData(txn_re_w19, cells.use = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Adv. GC'))]))
#read these files in if starting from a fresh environment
advGCmarkers = read.delim(file = "../20180328-advGCmarkers.txt", sep = "\t", row.names = 1) #adv gc markers from roc test
#read these files in if starting from a fresh environment
advGCmarkers = read.delim(file = "/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/20180328-advGCmarkers.txt", sep = "\t", row.names = 1) #adv gc markers from roc test
earlyGCmarkers = read.delim(file = "/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/20180328-earlyGCmarkers.txt", sep = "\t", row.names = 1) #adv gc markers from roc test
re_advGCmarkers = read.delim("/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/20180328-re_advGCmarkers.txt", row.names = 1)
re_earlyGCmarkers = read.delim("/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/20180328-re_earlyGCmarkers.txt", row.names = 1)
L1Pgenes = c("L1P4a_5end", "L1P4b_5end", "L1P4c_5end", "L1P4d_5end", "L1P4e_5end", "L1PA10", "L1PA11", "L1PA12", "L1PA12_5", "L1PA13", "L1PA13_5", "L1PA14", "L1PA14_5", "L1PA15", "L1PA16", "L1PA16_5", "L1PA17_5", "L1PA2", 'L1PA3', "L1PA4", "L1PA5", "L1PA6", "L1PA7", "L1PA7_5", "L1PA8", "L1 PB1", "L1 PB2", "L1PB2c", "L1 PB3", "L1 PB4", "L1PBA1_5", "L1PBA_5", "L1PBB_5", "L1PREC1", "L1PREC2", "L1P_MA2")
L1Pgenes = c("L1P4a_5end", "L1P4b_5end", "L1P4c_5end", "L1P4d_5end", "L1P4e_5end", "L1PA10", "L1PA11", "L1PA12",
"L1PA12_5", "L1PA13", "L1PA13_5", "L1PA14", "L1PA14_5", "L1PA15", "L1PA16", "L1PA16_5", "L1PA17_5",
"L1PA2", 'L1PA3', "L1PA4", "L1PA5", "L1PA6", "L1PA7", "L1PA7_5", "L1PA8", "L1 PB1", "L1 PB2", "L1PB2c",
"L1 PB3", "L1 PB4", "L1PBA1_5", "L1PBA_5", "L1PBB_5", "L1PREC1", "L1PREC2", "L1P_MA2")
DoHeatmap(txn_re_w19, genes.use = L1Pgenes, slim.col.label = TRUE,
remove.key = FALSE, group.label.rot = F, rotate.key = F, cex.row = 8,
col.low = "black", col.mid = "blue", col.high = "yellow", group.spacing = 0.5)
DoHeatmap(txn_re_w19, genes.use =  c("L1P4a_5end", "L1P4b_5end", "L1P4c_5end"), slim.col.label = TRUE,
remove.key = FALSE, group.label.rot = F, rotate.key = F, cex.row = 8,
col.low = "black", col.mid = "blue", col.high = "yellow", group.spacing = 0.5)
DoHeatmap(txn_re_w19, genes.use = "L1Pgenes", slim.col.label = TRUE,
remove.key = FALSE, group.label.rot = F, rotate.key = F, cex.row = 8,
col.low = "black", col.mid = "blue", col.high = "yellow", group.spacing = 0.5)
DoHeatmap(txn_re_w19, genes.use = c("L1PREC1"), slim.col.label = TRUE,
remove.key = FALSE, group.label.rot = F, rotate.key = F, cex.row = 8,
col.low = "black", col.mid = "blue", col.high = "yellow", group.spacing = 0.5)
L1Pgenes = c("L1P4a_5end", "L1P4b_5end", "L1P4c_5end", "L1P4d_5end", "L1P4e_5end", "L1PA10", "L1PA11", "L1PA12",
"L1PA12_5", "L1PA13", "L1PA13_5", "L1PA14", "L1PA14_5", "L1PA15", "L1PA16", "L1PA16_5", "L1PA17_5",
"L1PA2", 'L1PA3', "L1PA4", "L1PA5", "L1PA6", "L1PA7", "L1PA7_5", "L1PA8", "L1 PB1", "L1 PB2", "L1PB2c",
"L1 PB3", "L1 PB4", "L1PBA1_5", "L1PBA_5", "L1PBB_5", "L1PREC1", "L1PREC2", "L1P_MA2", "L1" ,"L1HS")
DoHeatmap(txn_re_w19, genes.use = L1Pgenes, slim.col.label = TRUE,
remove.key = FALSE, group.label.rot = F, rotate.key = F, cex.row = 8,
col.low = "black", col.mid = "blue", col.high = "yellow", group.spacing = 0.5)
L1Pgenes = c("L1HS", "L1P4a_5end", "L1P4b_5end", "L1P4c_5end", "L1P4d_5end", "L1P4e_5end", "L1PA10", "L1PA11", "L1PA12",
"L1PA12_5", "L1PA13", "L1PA13_5", "L1PA14", "L1PA14_5", "L1PA15", "L1PA16", "L1PA16_5", "L1PA17_5",
"L1PA2", 'L1PA3', "L1PA4", "L1PA5", "L1PA6", "L1PA7", "L1PA7_5", "L1PA8", "L1 PB1", "L1 PB2", "L1PB2c",
"L1 PB3", "L1 PB4", "L1PBA1_5", "L1PBA_5", "L1PBB_5", "L1PREC1", "L1PREC2", "L1P_MA2", "L1")
DoHeatmap(txn_re_w19, genes.use = L1Pgenes, slim.col.label = TRUE,
remove.key = FALSE, group.label.rot = F, rotate.key = F, cex.row = 8,
col.low = "black", col.mid = "blue", col.high = "yellow", group.spacing = 0.5)
L1Pgenes = c("L1HS", "L1P4a_5end", "L1P4b_5end", "L1P4c_5end", "L1P4d_5end", "L1P4e_5end","L1PA2", 'L1PA3',
"L1PA4", "L1PA5", "L1PA6", "L1PA7", "L1PA10", "L1PA11", "L1PA12", "L1PA12_5", "L1PA13", "L1PA13_5",
"L1PA14", "L1PA14_5", "L1PA15", "L1PA16", "L1PA16_5", "L1PA17_5", "L1PA7_5", "L1PA8", "L1 PB1", "L1 PB2", "L1PB2c",
"L1 PB3", "L1 PB4", "L1PBA1_5", "L1PBA_5", "L1PBB_5", "L1PREC1", "L1PREC2", "L1P_MA2", "L1")
DoHeatmap(txn_re_w19, genes.use = L1Pgenes, slim.col.label = TRUE,
remove.key = FALSE, group.label.rot = F, rotate.key = F, cex.row = 8,
col.low = "black", col.mid = "blue", col.high = "yellow", group.spacing = 0.5)
L1Pgenes = c("L1HS", "L1P4a_5end", "L1P4b_5end", "L1P4c_5end", "L1P4d_5end", "L1P4e_5end","L1PA2", 'L1PA3',
"L1PA4", "L1PA5", "L1PA6", "L1PA7", "L1PA8", "L1PA10", "L1PA11", "L1PA12", "L1PA12_5", "L1PA13", "L1PA13_5",
"L1PA14", "L1PA14_5", "L1PA15", "L1PA16", "L1PA16_5", "L1PA17_5", "L1PA7_5",  "L1 PB1", "L1 PB2", "L1PB2c",
"L1 PB3", "L1 PB4", "L1PBA1_5", "L1PBA_5", "L1PBB_5", "L1PREC1", "L1PREC2", "L1P_MA2", "L1")
DoHeatmap(txn_re_w19, genes.use = L1Pgenes, slim.col.label = TRUE,
remove.key = FALSE, group.label.rot = F, rotate.key = F, cex.row = 8,
col.low = "black", col.mid = "blue", col.high = "yellow", group.spacing = 0.5)
############################################################################
#most recent iteration for generating figures, contains both re and txn data
############################################################################
load(file = "/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/20180420-seuratw19_txn_re_figs.Robj")
scattercolors = c("cyan", "navy")
clustercolors = c("blue","forestgreen","gray45")
TSNEPlot(object = txn_re_w19, colors.use = clustercolors, pt.size = 2)
advgc_so = SubsetData(txn_re_w19, cells.use = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Adv. GC'))]))
earlygc_so = SubsetData(txn_re_w19, cells.use = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Early GC'))]))
allgc_so = SubsetData(txn_re_w19, cells.use = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Early GC','Adv. GC'))]))
gcgeneplot = function(gene1, gene2){
par(mfrow = c(2, 2))
GenePlot(advgc_so, gene1, gene2, col.use = c('blue'), cex.use = 1.5)
GenePlot(earlygc_so, gene1, gene2, col.use = c('forestgreen'),cex.use = 1.5)
GenePlot(allgc_so, gene1, gene2, col.use = clustercolors, cex.use = 1.5)
GenePlot(txn_re_w19, gene1, gene2, col.use = clustercolors, cex.use = 1.5)
}
gcgeneplot("L1PA2","HSP90AA1")
gcgeneplot("L1PA3","HSP90AA1")
gcgeneplot("L1HS","HSP90AA1")
View(gcgeneplot)
gcgeneplot("L1HS","PIWIL2")
gcgeneplot("L1HS","PIWIL4")
install.packages('tidyverse')
install.packages('pheatmap')
install.packages('viridis')
library(pheatmap)
library(tidyverse)
library(viridis)
# let's get some data
download.file('ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE108nnn/GSE108672/suppl/GSE108672_YY1_vs_WT.txt.gz',
destfile = 'insane_data.txt.gz')
# read it in
insane_data <- read_tsv(gzfile('insane_data.txt.gz'))
# what does the data look like?
head(insane_data)
# let's extract the matrix
insane_matrix <- as.matrix(insane_data[, 2:7])
colnames(insane_matrix) <- c('MX11', 'MX12', 'MX13', 'YY11', 'YY12', 'YY14')
rownames(insane_matrix) <- insane_data$X1
# what does the data look like?
head(insane_data)
head(insane_matrix)
# which genes to plot? pick based on adj p-value
genes_to_plot <- filter(insane_data, YY1.vs.WT_adj.P.Val < 0.05)$X1
# plot it!
pheatmap(mat = insane_matrix[genes_to_plot,])
# what the heck that was terrible
pheatmap(mat = insane_matrix[genes_to_plot,], scale = 'row')
# plot it!
pheatmap(mat = insane_matrix[genes_to_plot,])
# what the heck that was terrible
pheatmap(mat = insane_matrix[genes_to_plot,], scale = 'row')
# that's better, how about some more genes?
new_genes_to_plot <- insane_data %>% top_n(n = 150, wt = -YY1.vs.WT_adj.P.Val) %>% .$X1
pheatmap(mat = insane_matrix[new_genes_to_plot,], scale = 'row')
# clean it up
pheatmap(mat = insane_matrix[new_genes_to_plot,],
scale = 'row',
show_rownames = FALSE,
treeheight_row = 0,
fontsize = 18,
main = 'Insane Heatmap',
rot_col = 20,
color = viridis(n = 100, option = 'B'))
# clean it up
pheatmap(mat = insane_matrix[new_genes_to_plot,],
scale = 'row',
show_rownames = FALSE,
treeheight_row = 0,
fontsize = 18,
main = 'Insane Heatmap',
rot_col = 20
color = viridis(n = 100, option = 'B'))
# clean it up
pheatmap(mat = insane_matrix[new_genes_to_plot,],
scale = 'row',
show_rownames = FALSE,
treeheight_row = 0,
fontsize = 18,
main = 'Insane Heatmap',
rot_col = 20,
color = viridis(n = 100, option = 'B'))
source("http://cf.10xgenomics.com/supp/cell-exp/rkit-install-2.0.0.R")
# install some libraries - you only need to do this once!
install.packages('tidyverse')
install.packages('pheatmap')
library(pheatmap)
library(tidyverse)
library(RColorBrewer)
# let's get some data from this paper: https://www.cell.com/cell-reports/fulltext/S2211-1247(18)30043-3
yy1_data <- read_tsv('ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE108nnn/GSE108672/suppl/GSE108672_YY1_vs_WT.txt.gz')
# what the heck that was terrible
pheatmap(mat = yy1_matrix[genes_to_plot,], scale = 'row')
# which genes to plot? pick based on adj p-value from the original table (not the matrix, which has only the expression values)
genes_to_plot <- filter(yy1_data, YY1.vs.WT_adj.P.Val < 0.05)$Associated.Gene.Name
# let's extract the matrix
yy1_matrix <- as.matrix(yy1_data[, 2:7])
colnames(yy1_matrix) <- colnames(yy1_data[, 2:7])
rownames(yy1_matrix) <- yy1_data$Associated.Gene.Name
#let's take another look
head(yy1_matrix)
str(yy1_matrix)
# which genes to plot? pick based on adj p-value from the original table (not the matrix, which has only the expression values)
genes_to_plot <- filter(yy1_data, YY1.vs.WT_adj.P.Val < 0.05)$Associated.Gene.Name
# plot it!
pheatmap(mat = yy1_matrix[genes_to_plot,])
# what the heck that was terrible
pheatmap(mat = yy1_matrix[genes_to_plot,], scale = 'row')
# that's better, how about some more genes?
new_genes_to_plot <- top_n(yy1_data, n = 150, wt = -YY1.vs.WT_adj.P.Val)$Associated.Gene.Name
pheatmap(mat = yy1_matrix[new_genes_to_plot,], scale = 'row')
# that's better, how about some more genes?
new_genes_to_plot <- top_n(yy1_data, n = 150, wt = -YY1.vs.WT_adj.P.Val)$Associated.Gene.Name
# that's better, how about some more genes?
new_genes_to_plot <- top_n(yy1_data, n = 150, wt = -YY1.vs.WT_adj.P.Val)$Associated.Gene.Name
pheatmap(mat = yy1_matrix[new_genes_to_plot,], scale = 'row')
# clean it up
pheatmap(mat = yy1_matrix[new_genes_to_plot,],
scale = 'row',
show_rownames = FALSE,
treeheight_row = 0,
fontsize = 5,
main = 'Bootcamp Heatmap',
rot_col = 20,
color = colorRampPalette(brewer.pal(11, 'RdBu'))(100))
# clean it up
pheatmap(mat = yy1_matrix[new_genes_to_plot,],
scale = 'row',
show_rownames = FALSE,
treeheight_row = 0,
fontsize = 18,
main = 'Bootcamp Heatmap',
rot_col = 20,
color = colorRampPalette(brewer.pal(11, 'RdBu'))(100))
# clean it up
pheatmap(mat = yy1_matrix[new_genes_to_plot,],
scale = 'row',
show_rownames = FALSE,
treeheight_row = 0,
fontsize = 18,
main = 'Bootcamp Heatmap',
rot_col = 20,
color = colorRampPalette(brewer.pal(11, 'Rd'))(100))
# clean it up
pheatmap(mat = yy1_matrix[new_genes_to_plot,],
scale = 'row',
show_rownames = FALSE,
treeheight_row = 0,
fontsize = 18,
main = 'Bootcamp Heatmap',
rot_col = 20,
color = colorRampPalette(brewer.pal(11, 'Rdbl'))(100))
# clean it up
pheatmap(mat = yy1_matrix[new_genes_to_plot,],
scale = 'row',
show_rownames = FALSE,
treeheight_row = 0,
fontsize = 18,
main = 'Bootcamp Heatmap',
rot_col = 20,
color = colorRampPalette(brewer.pal(11, 'RdBl'))(100))
# clean it up
pheatmap(mat = yy1_matrix[new_genes_to_plot,],
scale = 'row',
show_rownames = FALSE,
treeheight_row = 0,
fontsize = 18,
main = 'Bootcamp Heatmap',
rot_col = 20,
color = colorRampPalette(brewer.pal(11, 'RdBd'))(100))
# clean it up
pheatmap(mat = yy1_matrix[new_genes_to_plot,],
scale = 'row',
show_rownames = FALSE,
treeheight_row = 0,
fontsize = 18,
main = 'Bootcamp Heatmap',
rot_col = 20,
color = colorRampPalette(brewer.pal(11, 'RdBd'))(100))
# clean it up
pheatmap(mat = yy1_matrix[new_genes_to_plot,],
scale = 'row',
show_rownames = FALSE,
treeheight_row = 0,
fontsize = 18,
main = 'Bootcamp Heatmap',
rot_col = 20,
color = colorRampPalette(brewer.pal(11, 'RdBu'))(100))
# clean it up
pheatmap(mat = yy1_matrix[new_genes_to_plot,],
scale = 'row',
show_rownames = FALSE,
treeheight_row = 0,
fontsize = 18,
main = 'BMS Heatmap',
rot_col = 20,
color = colorRampPalette(brewer.pal(11, 'RdBu'))(100))
# clean it up
pheatmap(mat = yy1_matrix[new_genes_to_plot,],
scale = 'row',
show_rownames = FALSE,
treeheight_row = 0,
fontsize = 18,
main = 'BMS Heatmap',
rot_col = 2,
color = colorRampPalette(brewer.pal(11, 'RdBu'))(100))
# clean it up
pheatmap(mat = yy1_matrix[new_genes_to_plot,],
scale = 'row',
show_rownames = FALSE,
treeheight_row = 0,
fontsize = 18,
main = 'BMS Heatmap',
rot_col = 20,
color = colorRampPalette(brewer.pal(11, 'RdBu'))(100))
# clean it up
pheatmap(mat = yy1_matrix[new_genes_to_plot,],
scale = 'row',
show_rownames = FALSE,
treeheight_row = 0,
fontsize = 1,
main = 'BMS Heatmap',
rot_col = 20,
color = colorRampPalette(brewer.pal(11, 'RdBu'))(100))
# clean it up
pheatmap(mat = yy1_matrix[new_genes_to_plot,],
scale = 'row',
show_rownames = FALSE,
treeheight_row = 0,
fontsize = 18,
main = 'BMS Heatmap',
rot_col = 20,
color = colorRampPalette(brewer.pal(11, 'RdBu'))(100))
############################################################################
#most recent iteration for generating figures, contains both re and txn data
############################################################################
load(file = "/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/20180420-seuratw19_txn_re_figs.Robj")
#week 19 transcriptome dataset input and clustering ####
setwd("/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/genebycell_19W/") #set wd to directory with UMI_Tools tsv file outputs
############################################################################
#most recent iteration for generating figures, contains both re and txn data
############################################################################
load(file = "/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_RE-wk19/9-Ranalysis/20180420-seuratw19_txn_re_figs.Robj")
library(Seurat)
install.packages("Seurat")
library(Seurat)
#week 19 transcriptome dataset input and clustering ####
setwd("/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/genebycell_19W/") #set wd to directory with UMI_Tools tsv file outputs
############################################################################
#most recent iteration for generating figures, contains both re and txn data
############################################################################
load(file = "/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_RE-wk19/9-Ranalysis/20180420-seuratw19_txn_re_figs.Robj")
mitogenes <- grep(pattern = "^MT-", x = rownames(x = txn_re_w19@data), value = TRUE)
GenePlot(object = txn_re_w19, gene1 = "nUMI", gene2 = "percentmito", col.use = c("red", "magenta", "darkgreen", "cyan"))
GenePlot(object = txn_re_w19, gene1 = "nUMI", gene2 = "nGene")
# let's get some data from this paper: https://www.cell.com/cell-reports/fulltext/S2211-1247(18)30043-3
yy1_data <- read_tsv('ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE108nnn/GSE108672/suppl/GSE108672_YY1_vs_WT.txt.gz')
library(pheatmap)
library(tidyverse)
library(RColorBrewer)
# let's get some data from this paper: https://www.cell.com/cell-reports/fulltext/S2211-1247(18)30043-3
yy1_data <- read_tsv('ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE108nnn/GSE108672/suppl/GSE108672_YY1_vs_WT.txt.gz')
biomart = read.delim("Downloads/mart_export.txt.gz")
head(biomart)
biomart[,1]
[,1:2]
biomart[,1:2]
biomart[,2:3]
biomart =  biomart[,2:3]
head(biomart)
?rbind
genes_of_interest = read.delim("~/Downloads/ensemble_from_gtf.txt")
genes_of_interest = read.tsv("~/Downloads/ensemble_from_gtf.txt")
load(tidyverse)
install.packages("tidyverse")
load(tidyverse)
load(tidyverse)
install.packages("tidyverse", dependencies = T)
load(tidyverse)
library(tidyverse)
genes_of_interest = read.tsv("~/Downloads/ensemble_from_gtf.txt")
genes_of_interest = read.table("~/Downloads/ensemble_from_gtf.txt")
View(genes_of_interest)
rbind(genes_of_interest,biomart)
cbind(genes_of_interest,biomart)
?cbind
tes = rbind(genes_of_interest,biomart)
tes = cbind(genes_of_interest,biomart)
tes = merge(genes_of_interest,biomart)
TSNEPlot(object = totalcells, do.label = T, colors.use = c('#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf','#999999'))
readRDS("~/Desktop/ant9_5.rds")
ant9_5 = readRDS("~/Desktop/ant9_5.rds")
ant9_5 <- RunPCA(object = ant9_5, pc.genes = ant9_5@var.genes, do.print = TRUE, pcs.print = 1:5, genes.print = 5, pcs.compute = 30)
VizPCA(object = ant9_5, pcs.use = 1:5)
PCHeatmap(object = ant9_5, pc.use = 1, cells.use = 196, do.balanced = TRUE, label.columns = FALSE)
PCHeatmap(object = ant9_5, pc.use = 2, cells.use = 196, do.balanced = TRUE, label.columns = FALSE)
PCHeatmap(object = ant9_5, pc.use = 3, cells.use = 196, do.balanced = TRUE, label.columns = FALSE)
PCHeatmap(object = ant9_5, pc.use = 3, cells.use = 196, do.balanced = TRUE, label.columns = FALSE)
ant9_5 <- JackStraw(object = ant9_5, num.replicate = 100, do.print = FALSE)
JackStrawPlot(object = ant9_5, PCs = 1:12) #1:10 significant
PCElbowPlot(object = ant9_5)
ant9_5 <- FindClusters(object = ant9_5, reduction.type = "pca", dims.use = 1:10, resolution = 0.6, print.output = 0, save.SNN = TRUE, force.recalc = TRUE)
ant9_5 <- RunTSNE(object = ant9_5, dims.use = 1:10, do.fast = T, perplexity = 30)
TSNEPlot(object = ant9_5, pt.size = 1, do.label = T, label.size = 5, colors.use = ninedarkgc)
TSNEPlot(object = ant9_5, pt.size = 1, do.label = T)
FeaturePlot(nmrpn5, features.plot =
c('Dazl','Dppa4','Pou5f1','Ddx4'),
cols.use = c("lightblue","purple"), no.legend = F)
FeaturePlot(ant9_5, features.plot =
c('Dazl','Dppa4','Pou5f1','Ddx4'),
cols.use = c("lightblue","purple"), no.legend = F)
FeaturePlot(ant9_5, features.plot =
c('mt-Nd1','Dppa4','Pou5f1','Ddx4'),
cols.use = c("lightblue","purple"), no.legend = F)
FeaturePlot(ant9_5, features.plot =
c('mt-Co1','Dppa4','Pou5f1','Ddx4'),
cols.use = c("lightblue","purple"), no.legend = F)
############################################################################
#most recent iteration for generating figures, contains both re and txn data
############################################################################
setwd("~/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_RE-wk19/9-Ranalysis/")
load(file = "20180420-seuratw19_txn_re_figs.Robj")
advgc_so = SubsetData(txn_re_w19, cells.use = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Adv. GC'))]))
earlygc_so = SubsetData(txn_re_w19, cells.use = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Early GC'))]))
allgc_so = SubsetData(txn_re_w19, cells.use = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Early GC','Adv. GC'))]))
#gene expression data
makegraphs = function(genelist){
#FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "pca", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
par(mfrow = c(2, 3))
FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "tsne", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
#VlnPlot(object = txn_re_w19, features.plot = c(genelist), cols.use = clustercolors, x.lab.rot = T, size.x.use = 0, point.size.use = 2, return.plotlist = TRUE, same.y.lims = T)
}
gcgeneplot = function(gene1, gene2){
par(mfrow = c(2, 2))
GenePlot(advgc_so, gene1, gene2, col.use = c('blue'), cex.use = 1.5)
GenePlot(earlygc_so, gene1, gene2, col.use = c('forestgreen'),cex.use = 1.5)
GenePlot(allgc_so, gene1, gene2, col.use = clustercolors, cex.use = 1.5)
GenePlot(txn_re_w19, gene1, gene2, col.use = clustercolors, cex.use = 1.5)
}
#for sig values of the gene expression plots ####
sigvaluesfxn = function(gene1, gene2){
advgcdata = FetchData(advgc_so, vars.all = c(gene1,gene2))
write.table(advgcdata, file = "advgcdata.txt", quote = FALSE, sep = "\t", row.names = TRUE)
earlygcdata = FetchData(earlygc_so, vars.all = c(gene1,gene2))
write.table(earlygcdata, file = "earlygcdata.txt", quote = FALSE, sep = "\t", row.names = TRUE)
allgcdata = FetchData(allgc_so, vars.all = c(gene1,gene2))
write.table(allgcdata, file = "allgcdata.txt", quote = FALSE, sep = "\t", row.names = TRUE)
somaandgc = FetchData(txn_re_w19, vars.all = c(gene1,gene2))
write.table(somaandgc, file = "somaandgc.txt", quote = FALSE, sep = "\t", row.names = TRUE)
}
setwd("/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/genebycell_19W/")
setwd("/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_RE-wk19/9-Ranalysis/genebycell_19W/gene_coor_stats/")
mkdir("l1pa2_l1pa3")
setwd("/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_RE-wk19/9-Ranalysis/genebycell_19W/gene_coor_stats/l1pa2_l1pa3/")
sigvaluesfxn("L1PA2","L1PA3")
