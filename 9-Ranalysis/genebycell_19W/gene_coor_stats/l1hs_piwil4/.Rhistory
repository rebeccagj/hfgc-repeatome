col.low = "magenta", col.mid = "black", col.high = "yellow", group.spacing = 0.5)
DoHeatmap(txn_re_w19, genes.use = heatmap_figure_genes, slim.col.label = TRUE,
remove.key = FALSE, group.label.rot = F, rotate.key = F, cex.row = 8,
col.low = "black", col.mid = "blue", col.high = "yellow", group.spacing = 0.5)
?FeaturePlot
makegraphs_assay = function(genelist){
makegraphs_assay = function(genelist){
makegraphs_assay = function(genelist){
#FeaturePlot(object = txn_assayRE_w19, features.plot = c(genelist), reduction.use = "pca", cols.use = scattercolors, no.legend = FALSE)
FeaturePlot(object = txn_assayRE_w19, features.plot = c(genelist), reduction.use = "tsne", cols.use = scattercolors, no.legend = FALSE, pch.use = 17)
#VlnPlot(object = txn_assayRE_w19, features.plot = c(genelist), cols.use = clustercolors, x.lab.rot = T, size.x.use = 0)
}
makegraphs_assay = function(genelist){
#FeaturePlot(object = txn_assayRE_w19, features.plot = c(genelist), reduction.use = "pca", cols.use = scattercolors, no.legend = FALSE)
FeaturePlot(object = txn_assayRE_w19, features.plot = c(genelist), reduction.use = "tsne", cols.use = scattercolors, no.legend = FALSE, pch.use = 17)
#VlnPlot(object = txn_assayRE_w19, features.plot = c(genelist), cols.use = clustercolors, x.lab.rot = T, size.x.use = 0)
}
makegraphs_assay(c("L1HS", "PIWIL4", "L1PREC2", "SVA_A", "HERVK9-int", "FordPrefect")) #seems similar to the original object with everything pre-included, going back to that one
makegraphs = function(genelist){
#FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "pca", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "tsne", cols.use = scattercolors, no.legend = FALSE, pt.size=2, pch.use = 17,18,19)
#VlnPlot(object = txn_re_w19, features.plot = c(genelist), cols.use = clustercolors, x.lab.rot = T, size.x.use = 0, point.size.use = 2, return.plotlist = TRUE)
}
makegraphs(c("NANOG", "DPPA3", "POU5F1", "DAZL", "DDX4", "KIT")) #germcellgenes
#FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "pca", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "tsne", cols.use = scattercolors, no.legend = FALSE, pt.size=2, pch.use = c(17,18,19)
#VlnPlot(object = txn_re_w19, features.plot = c(genelist), cols.use = clustercolors, x.lab.rot = T, size.x.use = 0, point.size.use = 2, return.plotlist = TRUE)
}
makegraphs(c("NANOG", "DPPA3", "POU5F1", "DAZL", "DDX4", "KIT")) #germcellgenes
makegraphs(c("DNMT3A","DNMT3B","DNMT3L","MECP2","PRMT5")) #dnamethylgenes
makegraphs(c("EZH2", "EZH1", "SUZ12", "EED", "RBBP7", "RBBP4")) #Enzymes involved in H3K27meth
makegraphs = function(genelist){
#FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "pca", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "tsne", cols.use = scattercolors, no.legend = FALSE, pt.size=2, pch.use = c(16))
#VlnPlot(object = txn_re_w19, features.plot = c(genelist), cols.use = clustercolors, x.lab.rot = T, size.x.use = 0, point.size.use = 2, return.plotlist = TRUE)
}
makegraphs(c("NANOG", "DPPA3", "POU5F1", "DAZL", "DDX4", "KIT")) #germcellgenes
#FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "pca", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "tsne", cols.use = scattercolors, no.legend = FALSE, pt.size=2, pch.use = c(17))
makegraphs = function(genelist){
#FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "pca", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "tsne", cols.use = scattercolors, no.legend = FALSE, pt.size=2, pch.use = c(17))
#VlnPlot(object = txn_re_w19, features.plot = c(genelist), cols.use = clustercolors, x.lab.rot = T, size.x.use = 0, point.size.use = 2, return.plotlist = TRUE)
}
makegraphs(c("NANOG", "DPPA3", "POU5F1", "DAZL", "DDX4", "KIT")) #germcellgenes
?TSNEPlot
gcgeneplot = function(gene1, gene2){
par(mfrow = c(2, 2))
GenePlot(advgc_so, gene1, gene2, col.use = c('blue'), cex.use = 1.5)
GenePlot(earlygc_so, gene1, gene2, col.use = c('forestgreen'),cex.use = 1.5)
GenePlot(allgc_so, gene1, gene2, col.use = clustercolors, cex.use = 1.5)
GenePlot(txn_re_w19, gene1, gene2, col.use = clustercolors, cex.use = 1.5)
}
gcgeneplot("L1HS","HSP90AA1")
gcgeneplot("L1HS","PIWIL2")
gcgeneplot("L1HS","PIWIL4")
gcgeneplot("HSP90AA1","PIWIL4")
gcgeneplot("PIWIL4","HSP90AA1")
?GenePlot
gcgeneplot("L1PA2","PIWIL2")
gcgeneplot("L1PA2","PIWIL4")
gcgeneplot("L1PA3","PIWIL2")
gcgeneplot("L1PA3","PIWIL4")
makegraphs(c("NANOG", "DPPA3", "POU5F1", "DAZL", "DDX4", "KIT","AMH","WT1","SOX9","ARX","TCF21","CYP17A1")) #germcellgenes
makegraphs = function(genelist){
#FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "pca", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
#FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "tsne", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
VlnPlot(object = txn_re_w19, features.plot = c(genelist), cols.use = clustercolors, x.lab.rot = T, size.x.use = 0, point.size.use = 2, return.plotlist = TRUE)
}
makegraphs(c("NANOG", "DPPA3", "POU5F1", "DAZL", "DDX4", "KIT","AMH","WT1","SOX9","ARX","TCF21","CYP17A1")) #germcellgenes
?VlnPlot
#FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "pca", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
#FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "tsne", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
VlnPlot(object = txn_re_w19, features.plot = c(genelist), cols.use = clustercolors, x.lab.rot = T, size.x.use = 0, point.size.use = 2, return.plotlist = TRUE, same.y.lims = T)
makegraphs = function(genelist){
#FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "pca", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
#FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "tsne", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
VlnPlot(object = txn_re_w19, features.plot = c(genelist), cols.use = clustercolors, x.lab.rot = T, size.x.use = 0, point.size.use = 2, return.plotlist = TRUE, same.y.lims = T)
}
makegraphs(c("NANOG", "DPPA3", "POU5F1", "DAZL", "DDX4", "KIT","AMH","WT1","SOX9","ARX","TCF21","CYP17A1")) #germcellgenes
makegraphs = function(genelist){
#FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "pca", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "tsne", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
#VlnPlot(object = txn_re_w19, features.plot = c(genelist), cols.use = clustercolors, x.lab.rot = T, size.x.use = 0, point.size.use = 2, return.plotlist = TRUE, same.y.lims = T)
}
makegraphs(c("POU5F1", "DDX4", "MAEL", "HSP90AA1", "PIWIL2", "PIWIL4")) #germcellgenes
2
makegraphs = function(genelist){
#FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "pca", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
par(mfrow = c(3, 2))
FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "tsne", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
#VlnPlot(object = txn_re_w19, features.plot = c(genelist), cols.use = clustercolors, x.lab.rot = T, size.x.use = 0, point.size.use = 2, return.plotlist = TRUE, same.y.lims = T)
}
makegraphs(c("POU5F1", "DDX4", "MAEL", "HSP90AA1", "PIWIL2", "PIWIL4")) #germcellgenes
makegraphs = function(genelist){
#FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "pca", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
par(mfrow = c(2, 3))
FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "tsne", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
#VlnPlot(object = txn_re_w19, features.plot = c(genelist), cols.use = clustercolors, x.lab.rot = T, size.x.use = 0, point.size.use = 2, return.plotlist = TRUE, same.y.lims = T)
}
makegraphs(c("POU5F1", "DDX4", "MAEL", "HSP90AA1", "PIWIL2", "PIWIL4")) #germcellgenes
par(mfrow = c(3, 2))
makegraphs(c("POU5F1", "DDX4", "MAEL", "HSP90AA1", "PIWIL2", "PIWIL4")) #germcellgenes
par(mfrow = c(2, 3))
makegraphs(c("POU5F1", "DDX4", "MAEL", "HSP90AA1", "PIWIL2", "PIWIL4")) #germcellgenes
############################################################################
#most recent iteration for generating figures, contains both re and txn data
############################################################################
load(file = "/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/20180420-seuratw19_txn_re_figs.Robj")
#gene expression data
scattercolors = c("cyan", "navy")
clustercolors = c("blue","forestgreen","gray45")
TSNEPlot(object = txn_re_w19, colors.use = clustercolors, pt.size = 2, pt.shape )
makegraphs = function(genelist){
#FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "pca", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
par(mfrow = c(2, 3))
FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "tsne", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
#VlnPlot(object = txn_re_w19, features.plot = c(genelist), cols.use = clustercolors, x.lab.rot = T, size.x.use = 0, point.size.use = 2, return.plotlist = TRUE, same.y.lims = T)
}
gcgeneplot("HSP90AA1","PIWIL4")
advgc_ids_re = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Adv. GC'))])
earlygc_ids_re = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Early GC'))])
allgc_ids_re = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Early GC','Adv. GC'))])
advgc_so = SubsetData(txn_re_w19, cells.use = advgc_ids_re)
earlygc_so = SubsetData(txn_re_w19, cells.use = earlygc_ids_re)
allgc_so = SubsetData(txn_re_w19, cells.use = allgc_ids_re)
gcgeneplot = function(gene1, gene2){
par(mfrow = c(2, 2))
GenePlot(advgc_so, gene1, gene2, col.use = c('blue'), cex.use = 1.5)
GenePlot(earlygc_so, gene1, gene2, col.use = c('forestgreen'),cex.use = 1.5)
GenePlot(allgc_so, gene1, gene2, col.use = clustercolors, cex.use = 1.5)
GenePlot(txn_re_w19, gene1, gene2, col.use = clustercolors, cex.use = 1.5)
}
gcgeneplot("L1PA2","PIWIL2")
gcgeneplot("L1PA2","PIWIL4")
gcgeneplot("L1PA3","PIWIL2")
gcgeneplot("L1PA3","PIWIL4")
?FindMarkers
############################################################################
#most recent iteration for generating figures, contains both re and txn data
############################################################################
load(file = "/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/20180420-seuratw19_txn_re_figs.Robj")
scattercolors = c("cyan", "navy")
clustercolors = c("blue","forestgreen","gray45")
TSNEPlot(object = txn_re_w19, colors.use = clustercolors, pt.size = 2, pt.shape )
makegraphs = function(genelist){
FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "pca", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
par(mfrow = c(2, 3))
FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "tsne", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
VlnPlot(object = txn_re_w19, features.plot = c(genelist), cols.use = clustercolors, x.lab.rot = T, size.x.use = 0, point.size.use = 2, return.plotlist = TRUE, same.y.lims = T)
}
makegraphs(c("NR3C1")) #glucocorticoid receptor steven
############################################################################
#most recent iteration for generating figures, contains both re and txn data
############################################################################
load(file = "/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/20180420-seuratw19_txn_re_figs.Robj")
#gene expression data
scattercolors = c("cyan", "navy")
clustercolors = c("blue","forestgreen","gray45")
TSNEPlot(object = txn_re_w19, colors.use = clustercolors, pt.size = 2, pt.shape )
#must initialize first 7 lines in "PIWIL4 and L1HS colocalization with other transposons" section
gcgeneplot = function(gene1, gene2){
par(mfrow = c(2, 2))
GenePlot(advgc_so, gene1, gene2, col.use = c('blue'), cex.use = 1.5)
GenePlot(earlygc_so, gene1, gene2, col.use = c('forestgreen'),cex.use = 1.5)
GenePlot(allgc_so, gene1, gene2, col.use = clustercolors, cex.use = 1.5)
GenePlot(txn_re_w19, gene1, gene2, col.use = clustercolors, cex.use = 1.5)
}
gcgeneplot("L1HS","HSP90AA1")
#PIWIL4 and L1HS colocalization with other transposons ####
advgc_ids_re = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Adv. GC'))])
earlygc_ids_re = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Early GC'))])
allgc_ids_re = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Early GC','Adv. GC'))])
advgc_so = SubsetData(txn_re_w19, cells.use = advgc_ids_re)
earlygc_so = SubsetData(txn_re_w19, cells.use = earlygc_ids_re)
allgc_so = SubsetData(txn_re_w19, cells.use = allgc_ids_re)
gcgeneplot("L1HS","HSP90AA1")
############################################################################
#most recent iteration for generating figures, contains both re and txn data
############################################################################
load(file = "/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/20180420-seuratw19_txn_re_figs.Robj")
#gene expression data
scattercolors = c("cyan", "navy")
clustercolors = c("blue","forestgreen","gray45")
TSNEPlot(object = txn_re_w19, colors.use = clustercolors, pt.size = 2, pt.shape )
TSNEPlot(object = txn_re_w19, colors.use = clustercolors, pt.size = 2)
makegraphs = function(genelist){
#FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "pca", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
par(mfrow = c(2, 3))
FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "tsne", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
#VlnPlot(object = txn_re_w19, features.plot = c(genelist), cols.use = clustercolors, x.lab.rot = T, size.x.use = 0, point.size.use = 2, return.plotlist = TRUE, same.y.lims = T)
}
#PIWIL4 and L1HS colocalization with other transposons ####
advgc_ids_re = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Adv. GC'))])
earlygc_ids_re = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Early GC'))])
allgc_ids_re = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Early GC','Adv. GC'))])
advgc_so = SubsetData(txn_re_w19, cells.use = advgc_ids_re)
earlygc_so = SubsetData(txn_re_w19, cells.use = earlygc_ids_re)
allgc_so = SubsetData(txn_re_w19, cells.use = allgc_ids_re)
rm(advgc_ids_re)
rm(advgc_so)
advgc_so = SubsetData(txn_re_w19, cells.use = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Adv. GC'))]))
#read these files in if starting from a fresh environment
advGCmarkers = read.delim(file = "../20180328-advGCmarkers.txt", sep = "\t", row.names = 1) #adv gc markers from roc test
#read these files in if starting from a fresh environment
advGCmarkers = read.delim(file = "/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/20180328-advGCmarkers.txt", sep = "\t", row.names = 1) #adv gc markers from roc test
earlyGCmarkers = read.delim(file = "/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/20180328-earlyGCmarkers.txt", sep = "\t", row.names = 1) #adv gc markers from roc test
re_advGCmarkers = read.delim("/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/20180328-re_advGCmarkers.txt", row.names = 1)
re_earlyGCmarkers = read.delim("/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/20180328-re_earlyGCmarkers.txt", row.names = 1)
L1Pgenes = c("L1P4a_5end", "L1P4b_5end", "L1P4c_5end", "L1P4d_5end", "L1P4e_5end", "L1PA10", "L1PA11", "L1PA12", "L1PA12_5", "L1PA13", "L1PA13_5", "L1PA14", "L1PA14_5", "L1PA15", "L1PA16", "L1PA16_5", "L1PA17_5", "L1PA2", 'L1PA3', "L1PA4", "L1PA5", "L1PA6", "L1PA7", "L1PA7_5", "L1PA8", "L1 PB1", "L1 PB2", "L1PB2c", "L1 PB3", "L1 PB4", "L1PBA1_5", "L1PBA_5", "L1PBB_5", "L1PREC1", "L1PREC2", "L1P_MA2")
L1Pgenes = c("L1P4a_5end", "L1P4b_5end", "L1P4c_5end", "L1P4d_5end", "L1P4e_5end", "L1PA10", "L1PA11", "L1PA12",
"L1PA12_5", "L1PA13", "L1PA13_5", "L1PA14", "L1PA14_5", "L1PA15", "L1PA16", "L1PA16_5", "L1PA17_5",
"L1PA2", 'L1PA3', "L1PA4", "L1PA5", "L1PA6", "L1PA7", "L1PA7_5", "L1PA8", "L1 PB1", "L1 PB2", "L1PB2c",
"L1 PB3", "L1 PB4", "L1PBA1_5", "L1PBA_5", "L1PBB_5", "L1PREC1", "L1PREC2", "L1P_MA2")
DoHeatmap(txn_re_w19, genes.use = L1Pgenes, slim.col.label = TRUE,
remove.key = FALSE, group.label.rot = F, rotate.key = F, cex.row = 8,
col.low = "black", col.mid = "blue", col.high = "yellow", group.spacing = 0.5)
DoHeatmap(txn_re_w19, genes.use =  c("L1P4a_5end", "L1P4b_5end", "L1P4c_5end"), slim.col.label = TRUE,
remove.key = FALSE, group.label.rot = F, rotate.key = F, cex.row = 8,
col.low = "black", col.mid = "blue", col.high = "yellow", group.spacing = 0.5)
DoHeatmap(txn_re_w19, genes.use = "L1Pgenes", slim.col.label = TRUE,
remove.key = FALSE, group.label.rot = F, rotate.key = F, cex.row = 8,
col.low = "black", col.mid = "blue", col.high = "yellow", group.spacing = 0.5)
DoHeatmap(txn_re_w19, genes.use = c("L1PREC1"), slim.col.label = TRUE,
remove.key = FALSE, group.label.rot = F, rotate.key = F, cex.row = 8,
col.low = "black", col.mid = "blue", col.high = "yellow", group.spacing = 0.5)
L1Pgenes = c("L1P4a_5end", "L1P4b_5end", "L1P4c_5end", "L1P4d_5end", "L1P4e_5end", "L1PA10", "L1PA11", "L1PA12",
"L1PA12_5", "L1PA13", "L1PA13_5", "L1PA14", "L1PA14_5", "L1PA15", "L1PA16", "L1PA16_5", "L1PA17_5",
"L1PA2", 'L1PA3', "L1PA4", "L1PA5", "L1PA6", "L1PA7", "L1PA7_5", "L1PA8", "L1 PB1", "L1 PB2", "L1PB2c",
"L1 PB3", "L1 PB4", "L1PBA1_5", "L1PBA_5", "L1PBB_5", "L1PREC1", "L1PREC2", "L1P_MA2", "L1" ,"L1HS")
DoHeatmap(txn_re_w19, genes.use = L1Pgenes, slim.col.label = TRUE,
remove.key = FALSE, group.label.rot = F, rotate.key = F, cex.row = 8,
col.low = "black", col.mid = "blue", col.high = "yellow", group.spacing = 0.5)
L1Pgenes = c("L1HS", "L1P4a_5end", "L1P4b_5end", "L1P4c_5end", "L1P4d_5end", "L1P4e_5end", "L1PA10", "L1PA11", "L1PA12",
"L1PA12_5", "L1PA13", "L1PA13_5", "L1PA14", "L1PA14_5", "L1PA15", "L1PA16", "L1PA16_5", "L1PA17_5",
"L1PA2", 'L1PA3', "L1PA4", "L1PA5", "L1PA6", "L1PA7", "L1PA7_5", "L1PA8", "L1 PB1", "L1 PB2", "L1PB2c",
"L1 PB3", "L1 PB4", "L1PBA1_5", "L1PBA_5", "L1PBB_5", "L1PREC1", "L1PREC2", "L1P_MA2", "L1")
DoHeatmap(txn_re_w19, genes.use = L1Pgenes, slim.col.label = TRUE,
remove.key = FALSE, group.label.rot = F, rotate.key = F, cex.row = 8,
col.low = "black", col.mid = "blue", col.high = "yellow", group.spacing = 0.5)
L1Pgenes = c("L1HS", "L1P4a_5end", "L1P4b_5end", "L1P4c_5end", "L1P4d_5end", "L1P4e_5end","L1PA2", 'L1PA3',
"L1PA4", "L1PA5", "L1PA6", "L1PA7", "L1PA10", "L1PA11", "L1PA12", "L1PA12_5", "L1PA13", "L1PA13_5",
"L1PA14", "L1PA14_5", "L1PA15", "L1PA16", "L1PA16_5", "L1PA17_5", "L1PA7_5", "L1PA8", "L1 PB1", "L1 PB2", "L1PB2c",
"L1 PB3", "L1 PB4", "L1PBA1_5", "L1PBA_5", "L1PBB_5", "L1PREC1", "L1PREC2", "L1P_MA2", "L1")
DoHeatmap(txn_re_w19, genes.use = L1Pgenes, slim.col.label = TRUE,
remove.key = FALSE, group.label.rot = F, rotate.key = F, cex.row = 8,
col.low = "black", col.mid = "blue", col.high = "yellow", group.spacing = 0.5)
L1Pgenes = c("L1HS", "L1P4a_5end", "L1P4b_5end", "L1P4c_5end", "L1P4d_5end", "L1P4e_5end","L1PA2", 'L1PA3',
"L1PA4", "L1PA5", "L1PA6", "L1PA7", "L1PA8", "L1PA10", "L1PA11", "L1PA12", "L1PA12_5", "L1PA13", "L1PA13_5",
"L1PA14", "L1PA14_5", "L1PA15", "L1PA16", "L1PA16_5", "L1PA17_5", "L1PA7_5",  "L1 PB1", "L1 PB2", "L1PB2c",
"L1 PB3", "L1 PB4", "L1PBA1_5", "L1PBA_5", "L1PBB_5", "L1PREC1", "L1PREC2", "L1P_MA2", "L1")
DoHeatmap(txn_re_w19, genes.use = L1Pgenes, slim.col.label = TRUE,
remove.key = FALSE, group.label.rot = F, rotate.key = F, cex.row = 8,
col.low = "black", col.mid = "blue", col.high = "yellow", group.spacing = 0.5)
setwd("~/Documents/Graduate_School/Laird_Lab/Experiments/RJ59-tex14-e13_5-WT_KO-Analysis/")
load("20180525-totalcells_WT-intialQC.Robj")
#normalization and clustering ####
totalcells <- NormalizeData(object = totalcells, normalization.method = "LogNormalize", scale.factor = 10000)
totalcells = FindVariableGenes(object = totalcells, mean.function = ExpMean, dispersion.function = LogVMR, x.low.cutoff = 0.0125, x.high.cutoff = 3, y.cutoff = 0.5)
length(x = totalcells@var.genes) #1984
totalcells <- ScaleData(object = totalcells, vars.to.regress = c("nUMI", "percent.mito"))
totalcells <- RunPCA(object = totalcells, pc.genes = totalcells@var.genes, do.print = TRUE, pcs.print = 1:5, genes.print = 5)
VizPCA(object = totalcells, pcs.use = 1:5)
PCAPlot(object = totalcells, dim.1 = 1, dim.2 = 2)
PCHeatmap(object = totalcells, pc.use = 1, cells.use = 500, do.balanced = TRUE, label.columns = FALSE)
save(totalcells, file = "20180607-totalcells_WT-fvg.Robj")
totalcells <- FindClusters(object = totalcells, reduction.type = "pca", dims.use = 1:10, resolution = 0.5, print.output = 0, force.recalc = TRUE)
totalcells <- RunTSNE(object = totalcells, dims.use = 1:10, do.fast = T)
TSNEPlot(object = totalcells)
save(totalcells, file = "20180607-totalcells_WT-clustered.Robj")
FeaturePlot(totalcells, features.plot = c('Dppa3', 'Pou5f1', 'Dazl', 'Sycp3'))
TSNEPlot(object = totalcells, do.label = T)
FeaturePlot(totalcells, features.plot = c('Dazl'))
old.totalcells.ids <- c(0,1,2,3,4,5,6,7,8,9,10,11,12,13)
new.totalcells.ids <- c("PGC 0", "PGC 1", "PGC 2", "soma 3", "soma 4","PGC 5","soma 6","PGC 7","soma 8","soma 9","PGC 10","soma 11","soma 12","soma 13")
totalcells@ident <- plyr::mapvalues(totalcells@ident, from = old.totalcells.ids, to = new.totalcells.ids)
TSNEPlot(totalcells, do.label = T)
save(totalcells, file = "20180607-totalcells_WT-clustered.Robj")
#which clusters are the PGC ones?
FeaturePlot(totalcells, features.plot = c('Fut4','Kit','Cxcr4','Nanog','Dazl','Ddx4','Gcna','Sycp3'))
#which clusters are the PGC ones?
FeaturePlot(totalcells, features.plot = c('Fut4','Kit','Cxcr4','Nanog','Dazl','Ddx4','Gcna1','Sycp3'))
#which clusters are the PGC ones?
FeaturePlot(totalcells, features.plot = c('Fut4','Kit','Cxcr4','Nanog','Dazl','Ddx4','Sycp1','Sycp3'))
#which clusters are the PGC ones?
FeaturePlot(totalcells, features.plot = c('Fut4','Kit','Cxcr4','Nanog','Dazl','Ddx4','Sycp1','Sycp3','Dppa3','Pou5f1'))
#which clusters are the PGC ones?
FeaturePlot(totalcells, features.plot = c('Fut4','Kit','Cxcr4','Nanog','Dazl','Ddx4','Sycp1','Sycp3','Dppa3','Pou5f1','Prdm1','Stra8'))
#which clusters are the PGC ones?
FeaturePlot(totalcells, features.plot =
c('Fut4','Kit','Cxcr4','Nanog',
'Dazl','Ddx4','Sycp1','Sycp3',
'Dppa3','Pou5f1','Prdm1','Stra8',
'Pou5f1','Ifitm3','Mvh'))
#which clusters are the PGC ones?
FeaturePlot(totalcells, features.plot =
c('Fut4','Kit','Cxcr4','Nanog',
'Dazl','Ddx4','Sycp1','Sycp3',
'Dppa3','Pou5f1','Prdm1','Stra8',
'Pou5f1','Ifitm3','Mvh'))
#which clusters are the PGC ones?
FeaturePlot(totalcells, features.plot =
c('Fut4','Kit','Cxcr4','Nanog',
'Dazl','Ddx4','Sycp1','Sycp3',
'Dppa3','Pou5f1','Prdm1','Stra8',
'Pou5f1','Ifitm3'))
#PGC only from here down ####
pgc.barcodes = names(totalcells@ident[(totalcells@ident %in% c('PGC *','PGC 2'))])
#PGC only from here down ####
pgc.barcodes = names(totalcells@ident[(totalcells@ident %in% c('PGC','PGC 2'))])
#PGC only from here down ####
pgc.barcodes = names(totalcells@ident[(totalcells@ident %in% c('PGC 1','PGC 2'))])
#PGC only from here down ####
pgc.barcodes = names(totalcells@ident[(totalcells@ident %in% c("PGC 0","PGC 1","PGC 2","PGC 5","PGC 7","PGC 10"))])
#PGC only from here down ####
pgc.barcodes = names(totalcells@ident[(totalcells@ident %in% c("PGC 0","PGC 1","PGC 2","PGC 5","PGC 7","PGC 10"))])
pgcells = SubsetData(totalcells, cells.use = pgc.barcodes)
pgcells #14596 genes across 190 samples
TSNEPlot((pgcells, do.label =T))
TSNEPlot(pgcells, do.label = T)
FeaturePlot(pgcells, features.plot =
c('Fut4','Kit','Cxcr4','Nanog',
'Dazl','Ddx4','Sycp1','Sycp3',
'Dppa3','Pou5f1','Prdm1','Stra8',
'Pou5f1','Ifitm3'))
#soma subset ####
soma.barcodes = names(totalcells@ident[(totalcells@ident %in% c("soma 3","soma 4",'soma 6','soma 8','soma 9','soma 11','soma 12','soma 13'))])
somacells = SubsetData(totalcells, cells.use = soma.barcodes)
totalcells
somacells
pgcells
4766+7697
FeaturePlot(somacells, features.plot =
c('Fut4','Kit','Cxcr4','Nanog',
'Dazl','Ddx4','Sycp1','Sycp3',
'Dppa3','Pou5f1','Prdm1','Stra8',
'Pou5f1','Ifitm3'))
TSNEPlot(somacells, do.label = T)
TSNEPlot(pgcells, do.label = T)
FeaturePlot(somacells, features.plot =
c('Fut4','Kit','Cxcr4','Nanog',
'Dazl','Ddx4','Sycp1','Sycp3',
'Dppa3','Pou5f1','Prdm1','Stra8',
'Pou5f1','Ifitm3'), pt.size = 0.5)
save(totalcells, file = "20180607-totalcells_WT.Robj")
save(somacells, file = "20180607-somacells_WT.Robj")
pgcells = FindVariableGenes(object = pgcells, mean.function = ExpMean, dispersion.function = LogVMR, x.low.cutoff = 0.0125, x.high.cutoff = 3, y.cutoff = 0.5, cex.text.use = 1)
FeaturePlot(pgcells, features.plot =
c('Fut4','Kit','Cxcr4','Nanog',
'Dazl','Ddx4','Sycp1','Sycp3',
'Dppa3','Pou5f1','Prdm1','Stra8',
'Pou5f1','Ifitm3',"Tex14"))
FeaturePlot(pgcells, features.plot = c("Tex14"))
length(x = pgcells@var.genes) #3468
pgcells <- RunPCA(object = pgcells, pc.genes = pgcells@var.genes, do.print = TRUE, pcs.print = 1:5, genes.print = 5, pcs.compute = 30)
VizPCA(object = pgcells, pcs.use = 1:9)
pgcells <- ProjectPCA(object = pgcells, do.print = FALSE)
PCHeatmap(object = pgcells, pc.use = 1:9, do.balanced = TRUE, label.columns = FALSE, use.full = FALSE)
pgcells <- JackStraw(object = pgcells, num.replicate = 100, display.progress = T)
pgcells <- JackStraw(object = pgcells, num.replicate = 100, display.progress = TRUE)
?JackStraw
pgcells <- JackStraw(object = pgcells, num.replicate = 100, do.print = T)
JackStrawPlot(object = pgcells, PCs = 1:12)
JackStrawPlot(object = pgcells, PCs = 1:15)
PCElbowPlot(pgcells, num.pc = 20)
PCElbowPlot(pgcells, num.pc = 50)
pgcells <- FindClusters(object = pgcells, reduction.type = "pca", dims.use = 1:14, resolution = 0.6, print.output = 0, save.SNN = TRUE, force.recalc = T)
PrintFindClustersParams(object = pgcells)
pgcells <- RunTSNE(object = pgcells, dims.use = 1:10, do.fast = T)
TSNEPlot(pgcells)
TSNEPlot(pgcells, do.label = T)
save(pgcells, file = "20180607-pgcells_WT.Robj")
pgcells <- FindClusters(object = pgcells, reduction.type = "pca", dims.use = 1:10, resolution = 0.5, print.output = 0, save.SNN = TRUE, force.recalc = T)
FeaturePlot(pgcells, features.plot =
c('Fut4','Kit','Cxcr4','Nanog',
'Dazl','Ddx4','Sycp1','Sycp3',
'Dppa3','Pou5f1','Prdm1','Stra8',
'Pou5f1','Ifitm3','Tex14'), pt.size = 0.5)
FeaturePlot(pgcells, features.plot =
c('Fut4','Kit','Cxcr4','Nanog',
'Dazl','Ddx4','Sycp1','Sycp3',
'Dppa3','Pou5f1','Prdm1','Stra8',
'Pou5f1','Ifitm3'), reduction.use = "pca")
FeaturePlot(totalcells, features.plot =
c('Piwil2',"Hsp90aa1","Piwil1","Piwil4"), pt.size = 0.5)
FeaturePlot(totalcells, features.plot =
c('Piwil2',"Hsp90aa1","Piwil1","Piwil4"), pt.size = 0.5, no.legend = FALSE)
FeaturePlot(totalcells, features.plot =
c('Nr3c1','Mael'), pt.size = 0.5, no.legend = FALSE)
FeaturePlot(totalcells, features.plot =
c('Hgb1'), pt.size = 0.5, no.legend = FALSE)
FeaturePlot(totalcells, features.plot =
c('Hgb2'), pt.size = 0.5, no.legend = FALSE)
FeaturePlot(totalcells, features.plot =
c('Hba'), pt.size = 0.5, no.legend = FALSE)
FeaturePlot(totalcells, features.plot =
c('Ogt'), pt.size = 0.5, no.legend = FALSE)
#week 19 transcriptome dataset input and clustering ####
setwd("/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/genebycell_19W/") #set wd to directory with UMI_Tools tsv file outputs
library(Seurat)
############################################################################
#most recent iteration for generating figures, contains both re and txn data
############################################################################
load(file = "/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/20180420-seuratw19_txn_re_figs.Robj")
scattercolors = c("cyan", "navy")
clustercolors = c("blue","forestgreen","gray45")
TSNEPlot(object = txn_re_w19, colors.use = clustercolors, pt.size = 2)
advgc_so = SubsetData(txn_re_w19, cells.use = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Adv. GC'))]))
earlygc_so = SubsetData(txn_re_w19, cells.use = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Early GC'))]))
allgc_so = SubsetData(txn_re_w19, cells.use = names(txn_re_w19@ident[(txn_re_w19@ident %in% c('Early GC','Adv. GC'))]))
#gene expression data
makegraphs = function(genelist){
#FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "pca", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
par(mfrow = c(2, 3))
FeaturePlot(object = txn_re_w19, features.plot = c(genelist), reduction.use = "tsne", cols.use = scattercolors, no.legend = FALSE, pt.size=2)
#VlnPlot(object = txn_re_w19, features.plot = c(genelist), cols.use = clustercolors, x.lab.rot = T, size.x.use = 0, point.size.use = 2, return.plotlist = TRUE, same.y.lims = T)
}
gcgeneplot = function(gene1, gene2){
par(mfrow = c(2, 2))
GenePlot(advgc_so, gene1, gene2, col.use = c('blue'), cex.use = 1.5)
GenePlot(earlygc_so, gene1, gene2, col.use = c('forestgreen'),cex.use = 1.5)
GenePlot(allgc_so, gene1, gene2, col.use = clustercolors, cex.use = 1.5)
GenePlot(txn_re_w19, gene1, gene2, col.use = clustercolors, cex.use = 1.5)
}
gcgeneplot("L1HS","HSP90AA1")
?GenePlot
View(gcgeneplot)
View(gcgeneplot)
#for sig values of the gene expression plots
FetchData(advgc_so, vars.all = c("L1HS","HSP90AA1"))
FetchData(earlygc_so, vars.all = c("L1HS","HSP90AA1"))
FetchData(allgc_so, vars.all = c("L1HS","HSP90AA1"))
FetchData(txn_re_w19, vars.all = c("L1HS","HSP90AA1"))
sigvaluesfxn = function(gene1, gene2){
allcelldata = FetchData(txn_re_w19, vars.all = c(gene1,gene2))
write.table(allcelldata, file = "allcelldata", quote = FALSE, sep = "\t", row.names = FALSE)
}
getwe()
getwd()
setwd("gene_coor_stats/")
sigvaluesfxn(c("L1HS","HSP90AA1"))
sigvaluesfxn("L1HS","HSP90AA1")
sigvaluesfxn = function(gene1, gene2){
allcelldata = FetchData(txn_re_w19, vars.all = c(gene1,gene2))
write.table(allcelldata, file = "allcelldata", quote = FALSE, sep = "\t", row.names = TRUE)
}
sigvaluesfxn("L1HS","HSP90AA1")
sigvaluesfxn = function(gene1, gene2){
advgcdata = FetchData(advgc_so, vars.all = c(gene1,gene2))
write.table(advgcdata, file = "advgcdata", quote = FALSE, sep = "\t", row.names = TRUE)
earlygcdata = FetchData(earlygc_so, vars.all = c(gene1,gene2))
write.table(earlygcdata, file = "earlygcdata", quote = FALSE, sep = "\t", row.names = TRUE)
allgcdata = FetchData(allgc_so, vars.all = c(gene1,gene2))
write.table(allgcdata, file = "allgcdata", quote = FALSE, sep = "\t", row.names = TRUE)
allcelldata = FetchData(txn_re_w19, vars.all = c(gene1,gene2))
write.table(allcelldata, file = "allcelldata", quote = FALSE, sep = "\t", row.names = TRUE)
}
#for sig values of the gene expression plots
setwd("/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/genebycell_19W/")
setwd("gene_coor_stats/l1hs_hsp90a/")
sigvaluesfxn("L1HS","HSP90AA1")
setwd("../l1hs_piwil2/")
FetchData(txn_re_w19, vars.all = c("L1HS","PIWIL2"))
setwd("../l1hs_piwil2/")
sigvaluesfxn("L1HS","PIWIL2")
setwd("../l1hs_piwil4/")
sigvaluesfxn("L1HS","PIWIL4")
sigvaluesfxn = function(gene1, gene2){
advgcdata = FetchData(advgc_so, vars.all = c(gene1,gene2))
write.table(advgcdata, file = "advgcdata", quote = FALSE, sep = "\t", row.names = TRUE)
earlygcdata = FetchData(earlygc_so, vars.all = c(gene1,gene2))
write.table(earlygcdata, file = "earlygcdata", quote = FALSE, sep = "\t", row.names = TRUE)
allgcdata = FetchData(allgc_so, vars.all = c(gene1,gene2))
write.table(allgcdata, file = "allgcdata", quote = FALSE, sep = "\t", row.names = TRUE)
somaandgc = FetchData(txn_re_w19, vars.all = c(gene1,gene2))
write.table(somaandgc, file = "somaandgc", quote = FALSE, sep = "\t", row.names = TRUE)
}
#for sig values of the gene expression plots
setwd("/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/genebycell_19W/")
setwd("gene_coor_stats/l1hs_hsp90a/")
sigvaluesfxn("L1HS","HSP90AA1")
sigvaluesfxn = function(gene1, gene2){
advgcdata = FetchData(advgc_so, vars.all = c(gene1,gene2))
write.table(advgcdata, file = "advgcdata.txt", quote = FALSE, sep = "\t", row.names = TRUE)
earlygcdata = FetchData(earlygc_so, vars.all = c(gene1,gene2))
write.table(earlygcdata, file = "earlygcdata.txt", quote = FALSE, sep = "\t", row.names = TRUE)
allgcdata = FetchData(allgc_so, vars.all = c(gene1,gene2))
write.table(allgcdata, file = "allgcdata.txt", quote = FALSE, sep = "\t", row.names = TRUE)
somaandgc = FetchData(txn_re_w19, vars.all = c(gene1,gene2))
write.table(somaandgc, file = "somaandgc.txt", quote = FALSE, sep = "\t", row.names = TRUE)
}
setwd("/Users/Rebecca/Documents/Graduate_School/Laird_Lab/Experiments/RJ31-LiLi_et_al_2017-HFGC_TE-alignment/9-Ranalysis/genebycell_19W/")
setwd("gene_coor_stats/l1hs_hsp90a/")
sigvaluesfxn("L1HS","HSP90AA1")
setwd("../l1hs_piwil2/")
sigvaluesfxn("L1HS","PIWIL2")
setwd("../l1hs_piwil4/")
sigvaluesfxn("L1HS","PIWIL4")
citation()
citation("Seurat")
install.packages('Seurat')
citation("Seurat")
A = c(14, 15, 16)
B = c(34,44,45)
cbind(A,B)
df = cbind(A,B)
df$C = df$B - 10
View(df)
View(df)
df = as.data.frame(df)
df$C = df$B-10
df$B
